[tool.poetry]
name = "vector_recsys_lite"
version = "0.1.4"
description = "ðŸ”¥ Zero-dep NumPy SVD recommender + ANN benchmark (2 s on 100 k MovieLens)"
authors = ["Simbarashe Timire <stimire92@gmail.com>"]
license = "MIT"
readme = "../../docs/README.md"
packages = [{include = "vector_recsys_lite", from = "src"}]
keywords = ["recommender-system", "svd", "numpy", "machine-learning", "collaborative-filtering"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
numpy = "^1.24.0"
typer = {extras = ["all"], version = "^0.9.0"}
rich = "^13.0.0"
pandas = "^2.0.0"
pyarrow = "^14.0.0"
h5py = "^3.10.0"
sqlalchemy = "^2.0.0"
scipy = "^1.11.0"
joblib = "^1.5.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.0.0"
isort = "^5.12.0"
mypy = "^1.5.0"
ruff = "^0.1.0"
numba = "^0.58.0"
pre-commit = "^3.5.0"
pytest-benchmark = "^4.0.0"
memory-profiler = "^0.61.0"

[tool.poetry.group.optional.dependencies]
numba = "^0.58.0"
sparse = "^0.14.0"

[tool.poetry.scripts]
vector-recsys = "vector_recsys_lite.cli:cli"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
target-version = "py39"
line-length = 88
select = ["E", "F", "I", "N", "W", "B", "C4", "UP"]
ignore = ["E501", "B008", "C901", "UP007"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=vector_recsys_lite",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmark tests",
]

[tool.coverage.run]
source = ["src/vector_recsys_lite"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
