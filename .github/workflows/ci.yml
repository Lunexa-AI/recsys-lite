name: Dev-CI

on:
  pull_request:
    branches: ['main']
  push:
    branches-ignore: ['main']        # feature branches
    paths-ignore:
      - 'docs/**'                    # skip CI on docs‑only edits

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true           # overwrite stale runs on re‑push

jobs:
  dev-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Poetry
        run: pip install --upgrade poetry

      - name: Install deps (dev extras)
        run: poetry install --with dev

      # ---------- quality gates ----------
      - name: Formatting
        run: poetry run pre-commit run --all-files --hook-stage manual

      - name: Lint (ruff & mypy)
        run: |
          poetry run ruff check .
          poetry run mypy src

      - name: Unit tests + coverage
        run: poetry run pytest --cov --cov-report xml

      - name: Security scan (bandit + pip‑audit)
        run: |
          poetry run bandit -r src -ll

      # ---------- smoke docker build ----------
      - name: Build docker image (cacheable)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: false
          tags: sample:ci
          cache-from: type=gha
          cache-to: type=gha,mode=max
