name: Release

on:
  push:
    tags: ['v*.*.*']        # SemVer tag ‑‑> publish

permissions:
  contents: write
  id-token: write           # for trusted publishing via pypi‑trusted‑publisher

env:
  POETRY_VIRTUALENVS_IN_PROJECT: true

jobs:
  release:
    runs-on: ubuntu-latest
    environment: pypi-production     # optional manual approval
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0             # tags & history for setuptools_scm, if any

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'

      - name: Install Poetry
        run: pip install --upgrade poetry

      - name: Ensure tag ↔ version match
        run: |
          TAG=${GITHUB_REF_NAME#v}
          FILE_VERSION=$(poetry version -s)
          [ "$TAG" = "$FILE_VERSION" ] || \
            (echo "Tag $TAG and pyproject $FILE_VERSION differ" && exit 1)

      - name: Install prod deps & build
        run: |
          poetry install --no-root
          poetry build

      - name: Verify artefacts
        run: |
          pip install twine
          twine check dist/*

      - name: Publish to PyPI
        if: github.ref_type == 'tag'
        uses: pypa/gh-action-pypi-publish@v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true            # idempotent

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
