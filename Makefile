# Makefile â€” recsys_lite (2025â€‘07â€‘refresh)
.DEFAULT_GOAL := help
.PHONY: \
  dev format lint typecheck test precommit \
  docker-build docker-test docker-prod \
  ci clean help

PKG       := recsys_lite
PY        := poetry run
VENV_DIR  := .venv                      # inâ€‘project virtualâ€‘env

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Dev workflow â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
dev: ## Install deps & preâ€‘commit hooks
	@[ -d $(VENV_DIR) ] || poetry env use $(shell command -v python3)
	poetry install --with dev
	$(PY) pre-commit install
	@echo "âœ… Dev environment ready"

format: ## Autoâ€‘format code (Black, isort, ruffâ€‘format)
	$(PY) black src/ tests/
	$(PY) isort  src/ tests/
	$(PY) ruff format src/ tests/

lint: ## Static analysis (ruff + format checks)
	$(PY) ruff check src/ tests/
	$(PY) black --check src/ tests/
	$(PY) isort --check  src/ tests/

typecheck: ## Optional mypy run
	$(PY) mypy src/ || true            # make strict later

test: ## Run tests + coverage (fail <75â€¯%)
	$(PY) pytest --cov=$(PKG) --cov-report=term-missing --cov-fail-under=75

precommit: ## Run all preâ€‘commit hooks
	$(PY) pre-commit run --all-files --show-diff-on-failure

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Docker helpers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# 1 Â· CI smoke image  â†’ tag :ci
docker-build: ## Build nativeâ€‘arch CI image (runs tests)
	docker buildx build \
	  --target test \
	  -t $(PKG):ci .

docker-test: docker-build ## Run pytest inside CI image
	docker run --rm $(PKG):ci pytest -q

# 2 Â· Production image  â†’ tag :latest
docker-prod: ## Build multiâ€‘arch production image (tests skipped on foreign arch)
	docker buildx build \
	  --platform linux/amd64,linux/arm64 \
	  --build-arg RUN_TESTS=false \
	  --target runtime \
	  -t $(PKG):latest .

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Meta targets â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ci: lint typecheck test ## Mirror GitHubâ€‘Actions CI locally
	@echo "ðŸŽ‰ All local CI checks passed!"

clean: ## Remove venv & transient artefacts
	rm -rf $(VENV_DIR) dist build *.egg-info .pytest_cache .coverage || true

help: ## Show this help
	@grep -E '^[a-zA-Z_-]+:.*?##' $(MAKEFILE_LIST) | \
	  awk 'BEGIN {FS = ":.*?##"} {printf "\033[36m%-15s\033[0m %s\n", $$1, $$2}'
